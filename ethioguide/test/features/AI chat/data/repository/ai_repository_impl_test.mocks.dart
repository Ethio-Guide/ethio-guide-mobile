// Mocks generated by Mockito 5.4.6 from annotations
// in ethioguide/test/features/AI%20chat/data/repository/ai_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:ethioguide/core/network/network_info.dart' as _i7;
import 'package:ethioguide/features/AI%20chat/data/datasources/ai_local_datasource.dart'
    as _i6;
import 'package:ethioguide/features/AI%20chat/data/datasources/ai_remote_datasource.dart'
    as _i3;
import 'package:ethioguide/features/AI%20chat/data/models/conversation_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeConversationModel_0 extends _i1.SmartFake
    implements _i2.ConversationModel {
  _FakeConversationModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AiRemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAiRemoteDatasource extends _i1.Mock
    implements _i3.AiRemoteDatasource {
  MockAiRemoteDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ConversationModel> sendQuery(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#sendQuery, [query]),
            returnValue: _i4.Future<_i2.ConversationModel>.value(
              _FakeConversationModel_0(
                this,
                Invocation.method(#sendQuery, [query]),
              ),
            ),
          )
          as _i4.Future<_i2.ConversationModel>);

  @override
  _i4.Future<List<_i2.ConversationModel>> getHistory() =>
      (super.noSuchMethod(
            Invocation.method(#getHistory, []),
            returnValue: _i4.Future<List<_i2.ConversationModel>>.value(
              <_i2.ConversationModel>[],
            ),
          )
          as _i4.Future<List<_i2.ConversationModel>>);

  @override
  _i4.Future<String> translateContent(String? content, String? lang) =>
      (super.noSuchMethod(
            Invocation.method(#translateContent, [content, lang]),
            returnValue: _i4.Future<String>.value(
              _i5.dummyValue<String>(
                this,
                Invocation.method(#translateContent, [content, lang]),
              ),
            ),
          )
          as _i4.Future<String>);
}

/// A class which mocks [AiLocalDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAiLocalDatasource extends _i1.Mock implements _i6.AiLocalDatasource {
  MockAiLocalDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.ConversationModel>> getCachedHistory() =>
      (super.noSuchMethod(
            Invocation.method(#getCachedHistory, []),
            returnValue: _i4.Future<List<_i2.ConversationModel>>.value(
              <_i2.ConversationModel>[],
            ),
          )
          as _i4.Future<List<_i2.ConversationModel>>);

  @override
  _i4.Future<void> cacheHistory(List<_i2.ConversationModel>? history) =>
      (super.noSuchMethod(
            Invocation.method(#cacheHistory, [history]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i7.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected =>
      (super.noSuchMethod(
            Invocation.getter(#isConnected),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);
}
