// Mocks generated by Mockito 5.4.6 from annotations
// in ethioguide/test/features/authentication/domain/usecases/reset_password_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:ethioguide/core/error/failures.dart' as _i5;
import 'package:ethioguide/features/authentication/domain/entities/user.dart'
    as _i6;
import 'package:ethioguide/features/authentication/domain/repositories/auth_repositoryy.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.User>> login(
    String? identifier,
    String? password,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#login, [identifier, password]),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.User>>.value(
              _FakeEither_0<_i5.Failure, _i6.User>(
                this,
                Invocation.method(#login, [identifier, password]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i6.User>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> register({
    required String? username,
    required String? email,
    required String? password,
    required String? name,
    String? phone,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#register, [], {
              #username: username,
              #email: email,
              #password: password,
              #name: name,
              #phone: phone,
            }),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
              _FakeEither_0<_i5.Failure, void>(
                this,
                Invocation.method(#register, [], {
                  #username: username,
                  #email: email,
                  #password: password,
                  #name: name,
                  #phone: phone,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> forgotPassword(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#forgotPassword, [email]),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
              _FakeEither_0<_i5.Failure, void>(
                this,
                Invocation.method(#forgotPassword, [email]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> resetPassword({
    required String? email,
    required String? token,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#resetPassword, [], {
              #email: email,
              #token: token,
              #newPassword: newPassword,
            }),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
              _FakeEither_0<_i5.Failure, void>(
                this,
                Invocation.method(#resetPassword, [], {
                  #email: email,
                  #token: token,
                  #newPassword: newPassword,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.User>> signInWithGoogle() =>
      (super.noSuchMethod(
            Invocation.method(#signInWithGoogle, []),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.User>>.value(
              _FakeEither_0<_i5.Failure, _i6.User>(
                this,
                Invocation.method(#signInWithGoogle, []),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i6.User>>);

  @override
  _i4.Future<void> saveTokens({
    required String? accessToken,
    required String? refreshToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#saveTokens, [], {
              #accessToken: accessToken,
              #refreshToken: refreshToken,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<String?> getAccessToken() =>
      (super.noSuchMethod(
            Invocation.method(#getAccessToken, []),
            returnValue: _i4.Future<String?>.value(),
          )
          as _i4.Future<String?>);

  @override
  _i4.Future<void> updateAccessToken(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#updateAccessToken, [token]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<String?> getRefreshToken() =>
      (super.noSuchMethod(
            Invocation.method(#getRefreshToken, []),
            returnValue: _i4.Future<String?>.value(),
          )
          as _i4.Future<String?>);

  @override
  _i4.Future<bool> isAuthenticated() =>
      (super.noSuchMethod(
            Invocation.method(#isAuthenticated, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<void> clearTokens() =>
      (super.noSuchMethod(
            Invocation.method(#clearTokens, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
