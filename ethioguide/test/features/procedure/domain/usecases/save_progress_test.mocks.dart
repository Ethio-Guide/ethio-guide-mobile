// Mocks generated by Mockito 5.4.6 from annotations
// in ethioguide/test/features/procedure/domain/usecases/save_progress_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:ethioguide/core/error/failures.dart' as _i5;
import 'package:ethioguide/features/procedure/domain/entities/procedure_detail.dart'
    as _i6;
import 'package:ethioguide/features/procedure/domain/entities/procedure_step.dart'
    as _i8;
import 'package:ethioguide/features/procedure/domain/entities/workspace_procedure.dart'
    as _i7;
import 'package:ethioguide/features/procedure/domain/repositories/workspace_procedure_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ProcedureDetailRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProcedureDetailRepository extends _i1.Mock
    implements _i3.ProcedureDetailRepository {
  MockProcedureDetailRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.ProcedureDetail>>>
  getProcedure() =>
      (super.noSuchMethod(
            Invocation.method(#getProcedure, []),
            returnValue:
                _i4.Future<
                  _i2.Either<_i5.Failure, List<_i6.ProcedureDetail>>
                >.value(
                  _FakeEither_0<_i5.Failure, List<_i6.ProcedureDetail>>(
                    this,
                    Invocation.method(#getProcedure, []),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.ProcedureDetail>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.WorkspaceSummary>>
  getWorkspaceSummary() =>
      (super.noSuchMethod(
            Invocation.method(#getWorkspaceSummary, []),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, _i7.WorkspaceSummary>>.value(
                  _FakeEither_0<_i5.Failure, _i7.WorkspaceSummary>(
                    this,
                    Invocation.method(#getWorkspaceSummary, []),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i7.WorkspaceSummary>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.ProcedureDetail>>>
  getProceduresByStatus(_i8.ProcedureStatus? status) =>
      (super.noSuchMethod(
            Invocation.method(#getProceduresByStatus, [status]),
            returnValue:
                _i4.Future<
                  _i2.Either<_i5.Failure, List<_i6.ProcedureDetail>>
                >.value(
                  _FakeEither_0<_i5.Failure, List<_i6.ProcedureDetail>>(
                    this,
                    Invocation.method(#getProceduresByStatus, [status]),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.ProcedureDetail>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.ProcedureDetail>>>
  getProceduresByOrganization(String? organization) =>
      (super.noSuchMethod(
            Invocation.method(#getProceduresByOrganization, [organization]),
            returnValue:
                _i4.Future<
                  _i2.Either<_i5.Failure, List<_i6.ProcedureDetail>>
                >.value(
                  _FakeEither_0<_i5.Failure, List<_i6.ProcedureDetail>>(
                    this,
                    Invocation.method(#getProceduresByOrganization, [
                      organization,
                    ]),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.ProcedureDetail>>>);

  @override
  _i4.Future<_i2.Either<String, _i6.ProcedureDetail>> getProcedureDetail(
    String? id,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getProcedureDetail, [id]),
            returnValue:
                _i4.Future<_i2.Either<String, _i6.ProcedureDetail>>.value(
                  _FakeEither_0<String, _i6.ProcedureDetail>(
                    this,
                    Invocation.method(#getProcedureDetail, [id]),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<String, _i6.ProcedureDetail>>);

  @override
  _i4.Future<_i2.Either<String, bool>> updateStepStatus(
    String? procedureId,
    String? stepId,
    bool? isCompleted,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateStepStatus, [
              procedureId,
              stepId,
              isCompleted,
            ]),
            returnValue: _i4.Future<_i2.Either<String, bool>>.value(
              _FakeEither_0<String, bool>(
                this,
                Invocation.method(#updateStepStatus, [
                  procedureId,
                  stepId,
                  isCompleted,
                ]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<String, bool>>);

  @override
  _i4.Future<_i2.Either<String, bool>> saveProgress(String? procedureId) =>
      (super.noSuchMethod(
            Invocation.method(#saveProgress, [procedureId]),
            returnValue: _i4.Future<_i2.Either<String, bool>>.value(
              _FakeEither_0<String, bool>(
                this,
                Invocation.method(#saveProgress, [procedureId]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<String, bool>>);
}
