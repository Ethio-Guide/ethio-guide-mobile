// Mocks generated by Mockito 5.4.6 from annotations
// in ethioguide/test/features/procedure/data/repositories/workspace_procedure_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:ethioguide/core/network/network_info.dart' as _i4;
import 'package:ethioguide/features/procedure/data/datasources/workspace_procedure_remote_data_source.dart'
    as _i6;
import 'package:ethioguide/features/procedure/data/models/workspace_procedure_model.dart'
    as _i3;
import 'package:ethioguide/features/procedure/data/models/workspace_summary_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWorkspaceSummaryModel_0 extends _i1.SmartFake
    implements _i2.WorkspaceSummaryModel {
  _FakeWorkspaceSummaryModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWorkspaceProcedureModel_1 extends _i1.SmartFake
    implements _i3.WorkspaceProcedureModel {
  _FakeWorkspaceProcedureModel_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i4.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isConnected =>
      (super.noSuchMethod(
            Invocation.getter(#isConnected),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);
}

/// A class which mocks [WorkspaceProcedureRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWorkspaceProcedureRemoteDataSource extends _i1.Mock
    implements _i6.WorkspaceProcedureRemoteDataSource {
  MockWorkspaceProcedureRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i3.WorkspaceProcedureModel>> getMyProcedures() =>
      (super.noSuchMethod(
            Invocation.method(#getMyProcedures, []),
            returnValue: _i5.Future<List<_i3.WorkspaceProcedureModel>>.value(
              <_i3.WorkspaceProcedureModel>[],
            ),
          )
          as _i5.Future<List<_i3.WorkspaceProcedureModel>>);

  @override
  _i5.Future<_i2.WorkspaceSummaryModel> getWorkspaceSummary() =>
      (super.noSuchMethod(
            Invocation.method(#getWorkspaceSummary, []),
            returnValue: _i5.Future<_i2.WorkspaceSummaryModel>.value(
              _FakeWorkspaceSummaryModel_0(
                this,
                Invocation.method(#getWorkspaceSummary, []),
              ),
            ),
          )
          as _i5.Future<_i2.WorkspaceSummaryModel>);

  @override
  _i5.Future<List<_i3.WorkspaceProcedureModel>> getProceduresByStatus(
    String? status,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getProceduresByStatus, [status]),
            returnValue: _i5.Future<List<_i3.WorkspaceProcedureModel>>.value(
              <_i3.WorkspaceProcedureModel>[],
            ),
          )
          as _i5.Future<List<_i3.WorkspaceProcedureModel>>);

  @override
  _i5.Future<List<_i3.WorkspaceProcedureModel>> getProceduresByOrganization(
    String? organization,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getProceduresByOrganization, [organization]),
            returnValue: _i5.Future<List<_i3.WorkspaceProcedureModel>>.value(
              <_i3.WorkspaceProcedureModel>[],
            ),
          )
          as _i5.Future<List<_i3.WorkspaceProcedureModel>>);

  @override
  _i5.Future<_i3.WorkspaceProcedureModel> getProcedureDetail(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getProcedureDetail, [id]),
            returnValue: _i5.Future<_i3.WorkspaceProcedureModel>.value(
              _FakeWorkspaceProcedureModel_1(
                this,
                Invocation.method(#getProcedureDetail, [id]),
              ),
            ),
          )
          as _i5.Future<_i3.WorkspaceProcedureModel>);

  @override
  _i5.Future<bool> updateStepStatus(
    String? procedureId,
    String? stepId,
    bool? isCompleted,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateStepStatus, [
              procedureId,
              stepId,
              isCompleted,
            ]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> saveProgress(String? procedureId) =>
      (super.noSuchMethod(
            Invocation.method(#saveProgress, [procedureId]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);
}
